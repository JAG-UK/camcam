error_log /dev/stdout info;

events {
    worker_connections 1024;
}

rtmp {
    server {
        listen 1935;
        chunk_size 4000;

        application stream {
            live on;
            record off;

            # Secure ingest
            on_publish http://auth:8080/auth;

            # Drop into HLS app, using $name = your stream key
            #exec ffmpeg -i rtmp://localhost:1935/stream/$name \
            #  -c:v libx264 -preset veryfast -g 50 -keyint_min 50 -sc_threshold 0 \
            #  -pix_fmt yuv420p -f flv rtmp://localhost:1935/hls/$name;

            # simply push whatever you publish into the `hls` app
            push   rtmp://localhost:1935/hls;
        }

        application hls {
            live on;
            hls on;
            hls_fragment 3;
            hls_playlist_length 10;
            hls_path /opt/data/hls;
            hls_nested on;
            hls_cleanup on;
        }
    }
}

http {
    include       mime.types;
    default_type  application/octet-stream;
    sendfile      on;
    keepalive_timeout 65;

    server {
        listen 80;

        location / {
            root   /data/html;
            index  live.html;
        }

        # Public URL (no stream key in path)
        location /live/ {
            alias /opt/data/hls/public/;
            types {
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;
            }
            add_header Cache-Control no-cache;
            add_header Access-Control-Allow-Origin *;
        }

        # (optional) internal debug
        location /hls/ {
            alias /opt/data/hls/;
            types {
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;
            }
            add_header Cache-Control no-cache;
        }
    }
}
